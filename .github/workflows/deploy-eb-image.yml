name: Deploy to ECR

# Manually dispatch the workflow
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI and configure credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2 # Set your region here

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build Docker image using Dockerfile with build arguments from secrets
      - name: Build Docker image
        run: |
          IMAGE_TAG=latest
          REPOSITORY_URI=${{secrets.AWS_ECR_REPOSITORY}}
          docker build \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg NEXTJS_CDN_URL=${{ secrets.NEXTJS_CDN_URL }} \
            --build-arg AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
            -t nextjs-docker-env:$IMAGE_TAG .

      # Step 5: Tag Docker image
      - name: Tag Docker image
        run: |
          IMAGE_TAG=latest
          REPOSITORY_URI=${{secrets.AWS_ECR_REPOSITORY}}
          docker tag nextjs-docker-env:$IMAGE_TAG ${{secrets.AWS_ECR_REPOSITORY}}:$IMAGE_TAG

      # Step 6: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=latest
          REPOSITORY_URI=${{secrets.AWS_ECR_REPOSITORY}}
          docker push ${{secrets.AWS_ECR_REPOSITORY}}:$IMAGE_TAG

      - name: Get current time
        uses: josStorer/get-current-time@v2.1.1
        id: current-time
        with:
          format: YYYY-MM-DD-HH-mm-ss
          utcOffset: "+09:00"

      - name: Generate deployment package
        run: |
          mkdir -p deploy
          cp Dockerrun.aws.json deploy/Dockerrun.aws.json 

          cd deploy && zip -r deploy.zip .

      - name: EB에 배포하기
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: nextjs-docker-env
          environment_name: nextjs-docker-env-dev
          version_label: nextjs-docker-env-dev-${{steps.current-time.outputs.formattedTime}}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          wait_for_environment_recovery: 600
