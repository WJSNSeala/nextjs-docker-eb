name: Deploy to ECR

# Manually dispatch the workflow
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up AWS CLI and configure credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2 # Set your region here

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build Docker image using Dockerfile with build arguments from secrets
      - name: Build Docker image
        run: |
          IMAGE_TAG=latest
          REPOSITORY_URI=${{secrets.AWS_ECR_REPOSITORY}}
          docker build \
            --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
            --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
            --build-arg NEXTJS_CDN_URL=${{ secrets.NEXTJS_CDN_URL }} \
            --build-arg AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
            -t nextjs-docker-env:$IMAGE_TAG .

      # Step 5: Tag Docker image
      - name: Tag Docker image
        run: |
          IMAGE_TAG=latest
          REPOSITORY_URI=${{secrets.AWS_ECR_REPOSITORY}}
          docker tag nextjs-docker-env:$IMAGE_TAG ${{secrets.AWS_ECR_REPOSITORY}}:$IMAGE_TAG

      # Step 6: Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          IMAGE_TAG=latest
          REPOSITORY_URI=${{secrets.AWS_ECR_REPOSITORY}}
          docker push ${{secrets.AWS_ECR_REPOSITORY}}:$IMAGE_TAG

      # Step 7: Check if EB CLI is installed and install if missing
      - name: Check for EB CLI
        run: |
          if ! command -v eb &> /dev/null
          then
            echo "EB CLI not found, installing..."
            pip install awsebcli
          else
            echo "EB CLI is already installed"
          fi

      # Step 8: Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        run: |
          EB_APP_NAME=nextjs-docker-env  # Replace with your Elastic Beanstalk app name
          EB_ENV_NAME=nextjs-docker-env-dev  # Replace with your Elastic Beanstalk environment name
          REPOSITORY_URI=${{secrets.AWS_ECR_REPOSITORY}}
          IMAGE_TAG=latest

          # Create Dockerrun.aws.json file
          echo '{
            "AWSEBDockerrunVersion": "1",
            "Image": {
              "Name": "'$REPOSITORY_URI':'$IMAGE_TAG'",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "80"
              }
            ]
          }' > Dockerrun.aws.json

          # Deploy to Elastic Beanstalk
          eb init $EB_APP_NAME --region ap-northeast-2 --platform "Docker" --source codecommit=false
          eb use $EB_ENV_NAME
          eb deploy
